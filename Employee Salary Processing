/**
 * Program description: Employee Salary Processing
 * Programmer: Adam bin Zolkhoari
 * Date: 13 March 2024
 */
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.StringTokenizer;
import java.io.PrintWriter;

public class EmployeeSalaryProcessor {
    public static void main(String[] args) {
        ArrayList<Employee> employees = new ArrayList<>();
        String inputFile = "C:/uptm/employeeSalaries.txt";
        String outputFile = "C:/uptm/employeeData.txt";

               try (BufferedReader br = new BufferedReader(new FileReader(inputFile))) {
            String line;
            while ((line = br.readLine()) != null) {
                StringTokenizer st = new StringTokenizer(line, "|");
                if (st.countTokens() != 3) {
                    System.out.println("Your Employee Data: " + line);
                    continue;
                }
                String name = st.nextToken().trim();
                double salary = Double.parseDouble(st.nextToken().trim());
                int yearsOfService = Integer.parseInt(st.nextToken().trim());
                employees.add(new Employee(name, salary, yearsOfService));
            }
        } catch (IOException e) {
            System.out.println("Error reading file: " + e.getMessage());
            return;
        }

        Employee topEmployee = null;
        double topAnnualSalary = -1;
        Employee leastServiceEmployee = null;
        int leastYearsofService = Integer.MAX_VALUE;

        for (Employee employee : employees) {
            double annualSalary = employee.salary + (employee.salary * 0.05 * employee.yearsOfService);
            if (annualSalary > topAnnualSalary) {
                topAnnualSalary = annualSalary;
                topEmployee = employee;
            }
            if (employee.yearsOfService < leastYearsofService) {
                leastYearsofService = employee.yearsOfService;
                leastServiceEmployee = employee;
            }
        }

        try (PrintWriter pw = new PrintWriter(new FileWriter(outputFile))) {
            for (Employee employee : employees) {
                double annualSalary = employee.salary + (employee.salary * 0.05 * employee.yearsOfService);
                pw.println(employee.name + "," + annualSalary + "," + employee.yearsOfService);
                System.out.println(employee.name + ": Annual Salary = " + annualSalary);
            }
            System.out.println("Top Performing Employee: " + topEmployee.name + ", Annual Salary: " + topAnnualSalary);
            System.out.println("Employee with Least Years of Service: " + leastServiceEmployee.name + ", Years of Service: " + leastYearsofService);
        } catch (IOException e) {
            System.out.println("Problem: " + e.getMessage());
        }
    }
}

class Employee {
    String name;
    double salary;
    int yearsOfService;

    public Employee(String name, double salary, int yearsOfService) {
        this.name = name;
        this.salary = salary;
        this.yearsOfService = yearsOfService;
    }
}
